<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Easy.Tall.UserCenter.WebApi</name>
    </assembly>
    <members>
        <member name="T:Easy.Tall.UserCenter.WebApi.Attribute.ApiExceptionFilterAttribute">
            <summary>
            异常过滤器
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Attribute.ApiExceptionFilterAttribute._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Attribute.ApiExceptionFilterAttribute.#ctor(Microsoft.Extensions.Logging.ILogger{Easy.Tall.UserCenter.WebApi.Attribute.ApiExceptionFilterAttribute})">
            <summary>
            构造函数
            </summary>
            <param name="logger">日志</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Attribute.ApiExceptionFilterAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            重写异常
            </summary>
            <param name="context">异常内容</param>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Attribute.PermissionFilterAttribute">
            <summary>
            权限过滤
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Attribute.PermissionFilterAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called early in the filter pipeline to confirm request is authorized.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext" />.</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Attribute.PermissionFilterAttribute.ValidatePermission(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            权限验证
            </summary>
            <param name="context">context</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Attribute.PermissionFilterAttribute.ValidatePermission(Microsoft.AspNetCore.Mvc.ActionContext,System.String)">
            <summary>
            权限验证
            </summary>
            <param name="context">当前上下文</param>
            <param name="path">权限路径</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Attribute.PermissionFilterAttribute.GetUnauthorized(System.Net.HttpStatusCode,System.String)">
            <summary>
            处理未授权的
            </summary>
            <param name="code">http状态码</param>
            <param name="message">消息</param>
            <returns>jsonResult</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.AuthController">
            <summary>
            需要授权访问
            </summary>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController">
            <summary>
            分类控制器
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController._classifyService">
            <summary>
            分类服务
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController.#ctor(Easy.Tall.UserCenter.IServices.IClassifyService)">
            <summary>
            构造函数
            </summary>
            <param name="classifyService">分类服务</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController.Add(Easy.Tall.UserCenter.Entity.Extend.ClassifyAddRequest)">
            <summary>
            添加
            </summary>
            <param name="classifyAddRequest">修改信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController.Remove(System.String)">
            <summary>
            删除
            </summary>
            <param name="id">id</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController.Update(Easy.Tall.UserCenter.Entity.Extend.ClassifyUpdateRequest)">
            <summary>
            修改
            </summary>
            <param name="classifyUpdateRequest">修改信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ClassifyController.GetPagination(Easy.Tall.UserCenter.Entity.Extend.ClassifyFilter)">
            <summary>
            分页
            </summary>
            <param name="classifyFilter">查询条件</param>
            <returns>数据</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase">
            <inheritdoc />
            <summary>
            控制基础类
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.Ok``1(``0)">
            <summary>
            Ok
            </summary>
            <param name="value">value</param>
            <returns>OkObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.Ok(System.Int32,System.String)">
            <summary>
            Ok
            </summary>
            <param name="code">code</param>
            <param name="value">value</param>
            <returns>OkObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.BadRequest(System.Int32,System.String)">
            <summary>
            BadRequest
            </summary>
            <param name="code">code</param>
            <param name="msg">msg</param>
            <returns>BadRequestObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.NotFound(System.Int32,System.String)">
            <summary>
            NotFound
            </summary>
            <param name="code">code</param>
            <param name="msg">msg</param>
            <returns>NotFoundObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.ServerException(System.Int32,System.String)">
            <summary>
            ServerException
            </summary>
            <param name="code">code</param>
            <param name="msg">msg</param>
            <returns>ObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.UnProcessableEntity(System.Int32,System.String)">
            <summary>
            UnProcessableEntity
            </summary>
            <param name="code">code</param>
            <param name="msg">msg</param>
            <returns>UnProcessableEntityObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.Conflict(System.Int32,System.String)">
            <summary>
            Conflict
            </summary>
            <param name="code">code</param>
            <param name="msg">msg</param>
            <returns>ConflictObjectResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.CreateResult``1(System.Int32,``0)">
            <summary>
            CreateAPIResult
            </summary>
            <typeparam name="T">T</typeparam>
            <param name="code">code</param>
            <param name="value">value</param>
            <returns>APIResult</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.FormatDataControllerBase.CreateResult(System.Int32,System.String)">
            <summary>
            CreateErrorResult
            </summary>
            <param name="code">code</param>
            <param name="msg">msg</param>
            <returns>APIResult</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.LoginController">
            <summary>
            用户登录
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.LoginController._jwtTokenValidator">
            <summary>
            JwtToken
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.LoginController._userService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.LoginController._permissionCacheService">
            <summary>
            缓存
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.LoginController.#ctor(Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator,Easy.Tall.UserCenter.IServices.IUserService,Easy.Tall.UserCenter.IServices.IPermissionCacheService)">
            <summary>
            构造函数
            </summary>
            <param name="jwtTokenValidator">jwtTokenValidator</param>
            <param name="userService">用户服务</param>
            <param name="permissionCacheService">缓存</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.LoginController.Login(Easy.Tall.UserCenter.Entity.Extend.UserLoginRequest)">
            <summary>
            用户登录测试
            </summary>
            <returns>返回token</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController">
            <summary>
            权限
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController._permissionService">
            <summary>
            权限服务
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.#ctor(Easy.Tall.UserCenter.IServices.IPermissionService)">
            <summary>
            构造函数
            </summary>
            <param name="permissionService">权限服务</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.Add(Easy.Tall.UserCenter.Entity.Extend.PermissionAddRequest)">
            <summary>
            添加
            </summary>
            <param name="permissionAddRequest">添加信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.Remove(Easy.Tall.UserCenter.Entity.Extend.PermissionRemoveRequest)">
            <summary>
            删除
            </summary>
            <param name="permissionRemoveRequest">删除信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.Update(Easy.Tall.UserCenter.Entity.Extend.PermissionUpdateRequest)">
            <summary>
            修改
            </summary>
            <param name="permissionUpdateRequest">修改信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.Get">
            <summary>
            查询权限
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.GetByRoleId(System.String)">
            <summary>
            查询权限(根据角色Id查询)
            </summary>
            <param name="roleId">角色Id</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.PermissionController.Edit(Easy.Tall.UserCenter.Entity.Extend.PermissionEditRequest)">
            <summary>
            编辑权限
            </summary>
            <param name="permissionEditRequest">编辑信息</param>
            <returns>结果</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.RoleController">
            <summary>
            角色控制器
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.RoleController._roleService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.RoleController._permissionService">
            <summary>
            权限服务
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.#ctor(Easy.Tall.UserCenter.IServices.IRoleService,Easy.Tall.UserCenter.IServices.IPermissionService)">
            <summary>
            构造函数
            </summary>
            <param name="roleService">角色服务</param>
            <param name="permissionService">角色权限</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.Add(Easy.Tall.UserCenter.Entity.Extend.RoleAddRequest)">
            <summary>
            添加
            </summary>
            <param name="roleAddRequest">添加信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.Remove(Easy.Tall.UserCenter.Entity.Extend.RoleRemoveRequest)">
            <summary>
            删除
            </summary>
            <param name="roleRemoveRequest">删除信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.Update(Easy.Tall.UserCenter.Entity.Extend.RoleUpdateRequest)">
            <summary>
            修改
            </summary>
            <param name="roleUpdateRequest">修改信息</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.GetPagination(Easy.Tall.UserCenter.Entity.Extend.RoleFilter)">
            <summary>
            分页
            </summary>
            <param name="roleFilter">查询条件</param>
            <returns>数据</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.GetRoleGroupByResponses">
            <summary>
            查询角色分组
            </summary>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.Get(System.String)">
            <summary>
            查询权限
            </summary>
            <param name="roleId">角色Id</param>
            <returns>结果</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.RoleController.EditPermission(Easy.Tall.UserCenter.Entity.Extend.PermissionEditRequest)">
            <summary>
            编辑权限
            </summary>
            <param name="permissionEditRequest">编辑信息</param>
            <returns>结果</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.TestController">
            <summary>
            test
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.TestController.#ctor(Easy.Tall.UserCenter.IServices.IUserService,CSRedis.CSRedisClient,Easy.Tall.UserCenter.IServices.IRedisCacheService{CSRedis.CSRedisClient},Easy.Tall.UserCenter.IServices.IRoleService,Microsoft.Extensions.Logging.ILogger{Easy.Tall.UserCenter.WebApi.Controllers.ValuesController})">
            <summary>
            ValuesController
            </summary>
            <param name="userServices">userServices</param>
            <param name="redisClient">redisClient</param>
            <param name="redisCacheService">redisCacheService</param>
            <param name="roleService">roleService</param>
            <param name="logger">logger</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.TestController.Get">
            <summary>
            GET api/values
            </summary>
            <returns>string</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.UnAuthController">
            <summary>
            无需授权
            </summary>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Controllers.ValuesController">
            <summary>
            Values
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Controllers.ValuesController._permissionService">
            <summary>
            权限服务
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ValuesController.#ctor(Easy.Tall.UserCenter.IServices.IPermissionService)">
            <summary>
            构造函数
            </summary>
            <param name="permissionService">权限服务</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Controllers.ValuesController.GetByUserId">
            <summary>
            查询权限
            </summary>
            <returns>结果</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension">
            <summary>
            Api容器扩展
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddMvcBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加MVC服务
            </summary>
            <param name="services">容器</param>
            <returns>容器接口</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddContexts(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加HttpContext
            </summary>
            <param name="services">容器</param>
            <returns>容器接口</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加Swagger
            </summary>
            <param name="services">容器</param>
            <param name="configuration">配置文件</param>
            <returns>容器接口</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            注册身份证验证
            </summary>
            <param name="services">容器</param>
            <param name="configuration">配置文件</param>
            <returns>容器接口</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddRedisCache(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加RedisCache缓存
            </summary>
            <param name="services">容器</param>
            <param name="configuration">配置文件</param>
            <returns>容器接口</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddLog(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加日志
            </summary>
            <param name="services">容器</param>
            <param name="configuration">配置文件</param>
            <returns>容器接口</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.AddCorsService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加跨越
            </summary>
            <param name="services">容器</param>
            <returns>容器</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.ApiIocExtension.UseApplicationExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            全局异常处理
            </summary>
            <param name="app">app</param>
            <returns>app</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator">
            <summary>
            JwtToken
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator._ssoOptions">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.#ctor(Microsoft.Extensions.Options.IOptions{Easy.Tall.UserCenter.Entity.Extend.Options.SsoOptions})">
            <summary>
            构造函数
            </summary>
            <param name="ssoOptions">配置信息</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.CanReadToken(System.String)">
            <summary>
            Returns true if the token can be read, false otherwise.
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.ValidateToken(System.String,Microsoft.IdentityModel.Tokens.TokenValidationParameters,Microsoft.IdentityModel.Tokens.SecurityToken@)">
            <summary>
            Validates a token passed as a string using <see cref="T:Microsoft.IdentityModel.Tokens.TokenValidationParameters" />
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.CanValidateToken">
            <summary>
            如果可以验证令牌，则返回true
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.MaximumTokenSizeInBytes">
            <summary>
            获取并设置将处理的最大大小(以字节为单位)
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.GenerateToken(Easy.Tall.UserCenter.Entity.Model.User)">
            <summary>
            创建Token
            </summary>
            <param name="user">用户</param>
            <returns>string</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Extensions.JwtTokenValidator.ValidateToken(System.String,Microsoft.IdentityModel.Tokens.SecurityToken@)">
            <summary>
            验证token
            </summary>
            <param name="token">token</param>
            <param name="securityToken">securityToken</param>
            <returns>ClaimsPrincipal</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions">
            <summary>
            文档配置
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.ApiDocEndPoint">
            <summary>
            文档服务POST地址
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.ApiHost">
            <summary>
            文档接口地址
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.ApiName">
            <summary>
            文档名称
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.ApiDocUpdatePath">
            <summary>
            更新文档路由
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.ApiJsonFilePath">
            <summary>
            apiJsonFile路径
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckExtension">
            <summary>
            登录检查扩展
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckExtension.UseLoginCheck(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            加入中间件
            </summary>
            <param name="builder">builder</param>
            <returns>IApplicationBuilder</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckMiddleware">
            <summary>
            登陆检查中间件
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckMiddleware._next">
            <summary>
            http请求处理管道
            </summary>
        </member>
        <member name="F:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckMiddleware._permissionCacheService">
            <summary>
            缓存
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Easy.Tall.UserCenter.IServices.IPermissionCacheService)">
            <summary>
            构造函数
            </summary>
            <param name="next">http请求处理管道</param>
            <param name="permissionCacheService">缓存</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            异步检测
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Middleware.LoginCheckMiddleware.SetResult(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            设置结果
            </summary>
            <param name="context">http上下文</param>
            <param name="message">消息</param>
            <returns>结果</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Middleware.SwaggerBuilderExtension">
            <summary>
            Swagger中间件
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Middleware.SwaggerBuilderExtension.UseSwaggerApiDoc(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Net.Http.IHttpClientFactory,System.Action{Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions})">
            <summary>
            使用swagger生成文档并发送到文档中心
            </summary>
            <param name="builder">IApplicationBuilder</param>
            <param name="options">options 配置</param>
            <param name="httpClientFactory">httpClientFactory</param>
            <returns>IApplicationBuilder</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Middleware.SwaggerBuilderExtension.GenerateApiDocFile(Easy.Tall.UserCenter.WebApi.Middleware.ApiDocOptions)">
            <summary>
            生成api文档
            </summary>
            <param name="option">option</param>
            <returns>string</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Program">
            <summary>
            程序入口
            启动命令 dotnet Holder.ERP.Picking.WebApi.dll --project=E:\code\picking\WebApi\Holder.ERP.Picking.WebApi --urls=http://localhost:5001/
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Program.Main(System.String[])">
            <summary>
            程序Main方法
            </summary>
            <param name="args">args</param>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            创建WebHostBuilder
            </summary>
            <param name="args">参数</param>
            <returns>结果</returns>
        </member>
        <member name="T:Easy.Tall.UserCenter.WebApi.Startup">
            <summary>
            启动项
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            启动项构造
            </summary>
            <param name="configuration">配置文件</param>
        </member>
        <member name="P:Easy.Tall.UserCenter.WebApi.Startup.Configuration">
            <summary>
            配置文件
            </summary>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940</param>
            <returns>DI容器</returns>
        </member>
        <member name="M:Easy.Tall.UserCenter.WebApi.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.Net.Http.IHttpClientFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">app</param>
            <param name="env">env</param>
            <param name="httpClientFactory">http请求工厂</param>
        </member>
    </members>
</doc>
